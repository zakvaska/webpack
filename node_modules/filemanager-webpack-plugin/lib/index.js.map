{"version":3,"file":"index.js","sources":["../src/options-schema.js","../src/utils/p-exec.js","../node_modules/is-extglob/index.js","../node_modules/is-glob/index.js","../src/actions/copy.js","../src/actions/move.js","../src/actions/delete.js","../src/actions/mkdir.js","../src/actions/archive.js","../src/index.js"],"sourcesContent":["export default {\n  title: 'FileManagerPluginOptions',\n  type: 'object',\n  additionalProperties: false,\n  definitions: {\n    Copy: {\n      description: 'Copy individual files or entire directories from a source folder to a destination folder',\n      type: 'array',\n      minItems: 1,\n      additionalItems: true,\n      itmes: [\n        {\n          type: 'object',\n          additionalProperties: false,\n          properties: {\n            source: {\n              description: 'Copy source. A file or directory or a glob',\n              type: 'string',\n              minLength: 1,\n            },\n            destination: {\n              description: 'Copy destination',\n              type: 'string',\n              minLength: 1,\n            },\n          },\n        },\n      ],\n    },\n    Delete: {\n      description: 'Delete individual files or entire directories',\n      type: 'array',\n      minItems: 1,\n      additionalItems: true,\n      items: {\n        type: 'string',\n      },\n    },\n    Move: {\n      description: 'Move individual files or entire directories from a source folder to a destination folder',\n      type: 'array',\n      additionalItems: true,\n      items: [\n        {\n          type: 'object',\n          additionalProperties: false,\n          properties: {\n            source: {\n              description: 'Move source. A file or directory or a glob',\n              type: 'string',\n              minLength: 1,\n            },\n            destination: {\n              description: 'Move destination',\n              type: 'string',\n              minLength: 1,\n            },\n          },\n        },\n      ],\n    },\n    Mkdir: {\n      description: 'Create Directories',\n      type: 'array',\n      minItems: 1,\n      additionalItems: true,\n      items: {\n        type: 'string',\n      },\n    },\n    Archive: {\n      description: 'Archive individual files or entire directories.',\n      type: 'array',\n      additionalItems: true,\n      items: [\n        {\n          type: 'object',\n          additionalProperties: false,\n          properties: {\n            source: {\n              description: 'Source. A file or directory or a glob',\n              type: 'string',\n              minLength: 1,\n            },\n            destination: {\n              description: 'Archive destination',\n              type: 'string',\n              minLength: 1,\n            },\n            format: {\n              type: 'string',\n              enum: ['zip', 'tar'],\n            },\n            options: {\n              additionalProperties: true,\n              type: 'object',\n              description: 'Options to forward to archiver',\n            },\n          },\n        },\n      ],\n    },\n    Actions: {\n      type: 'object',\n      additionalProperties: false,\n      properties: {\n        copy: {\n          $ref: '#/definitions/Copy',\n        },\n        delete: {\n          $ref: '#/definitions/Delete',\n        },\n        move: {\n          $ref: '#/definitions/Move',\n        },\n        mkdir: {\n          $ref: '#/definitions/Mkdir',\n        },\n        archive: {\n          $ref: '#/definitions/Archive',\n        },\n      },\n    },\n  },\n  properties: {\n    events: {\n      type: 'object',\n      additionalProperties: false,\n      properties: {\n        onStart: {\n          oneOf: [\n            {\n              $ref: '#/definitions/Actions',\n            },\n            {\n              type: 'array',\n              items: {\n                $ref: '#/definitions/Actions',\n              },\n            },\n          ],\n        },\n        onEnd: {\n          oneOf: [\n            {\n              $ref: '#/definitions/Actions',\n            },\n            {\n              type: 'array',\n              items: {\n                $ref: '#/definitions/Actions',\n              },\n            },\n          ],\n        },\n      },\n    },\n    runTasksInSeries: {\n      type: 'boolean',\n      default: false,\n      description: 'Run tasks in an action in series',\n    },\n  },\n};\n","const defaultTask = async () => {};\n\nconst pExec = async (series = false, arr = [], task = defaultTask) => {\n  if (series) {\n    await arr.reduce((p, spec) => p.then(() => task(spec)), Promise.resolve(null));\n    return;\n  }\n\n  const pMap = arr.map(async (spec) => await task(spec));\n  await Promise.all(pMap);\n};\n\nexport default pExec;\n","/*!\n * is-extglob <https://github.com/jonschlinkert/is-extglob>\n *\n * Copyright (c) 2014-2016, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\nmodule.exports = function isExtglob(str) {\n  if (typeof str !== 'string' || str === '') {\n    return false;\n  }\n\n  var match;\n  while ((match = /(\\\\).|([@?!+*]\\(.*\\))/g.exec(str))) {\n    if (match[2]) return true;\n    str = str.slice(match.index + match[0].length);\n  }\n\n  return false;\n};\n","/*!\n * is-glob <https://github.com/jonschlinkert/is-glob>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nvar isExtglob = require('is-extglob');\nvar chars = { '{': '}', '(': ')', '[': ']'};\nvar strictRegex = /\\\\(.)|(^!|\\*|[\\].+)]\\?|\\[[^\\\\\\]]+\\]|\\{[^\\\\}]+\\}|\\(\\?[:!=][^\\\\)]+\\)|\\([^|]+\\|[^\\\\)]+\\))/;\nvar relaxedRegex = /\\\\(.)|(^!|[*?{}()[\\]]|\\(\\?)/;\n\nmodule.exports = function isGlob(str, options) {\n  if (typeof str !== 'string' || str === '') {\n    return false;\n  }\n\n  if (isExtglob(str)) {\n    return true;\n  }\n\n  var regex = strictRegex;\n  var match;\n\n  // optionally relax regex\n  if (options && options.strict === false) {\n    regex = relaxedRegex;\n  }\n\n  while ((match = regex.exec(str))) {\n    if (match[2]) return true;\n    var idx = match.index + match[0].length;\n\n    // if an open bracket/brace/paren is escaped,\n    // set the index to the next closing character\n    var open = match[1];\n    var close = open ? chars[open] : null;\n    if (open && close) {\n      var n = str.indexOf(close, idx);\n      if (n !== -1) {\n        idx = n + 1;\n      }\n    }\n\n    str = str.slice(idx);\n  }\n  return false;\n};\n","import fs from 'fs';\nimport path from 'path';\n\nimport fsExtra from 'fs-extra';\nimport cpy from 'cpy';\nimport isGlob from 'is-glob';\n\nimport pExec from '../utils/p-exec';\n\nconst copy = async (task) => {\n  const { source, absoluteSource, absoluteDestination, context, toType } = task;\n\n  try {\n    if (isGlob(source)) {\n      const src = path.posix.join(context, source);\n      await cpy(src, absoluteDestination);\n    } else {\n      const isSourceFile = fs.lstatSync(absoluteSource).isFile();\n\n      // if source is a file and target is a directory\n      // create the directory and copy the file into that directory\n      if (isSourceFile && toType === 'dir') {\n        await fsExtra.ensureDir(absoluteDestination);\n\n        const sourceFileName = path.basename(absoluteSource);\n        const filePath = path.resolve(absoluteDestination, sourceFileName);\n\n        await fsExtra.copy(absoluteSource, filePath);\n        return;\n      }\n\n      await fsExtra.copy(absoluteSource, absoluteDestination);\n    }\n  } catch (err) {}\n};\n\nconst copyAction = async (tasks, options) => {\n  const { runTasksInSeries } = options;\n\n  pExec(runTasksInSeries, tasks, async (task) => await copy(task));\n};\n\nexport default copyAction;\n","import fsExtra from 'fs-extra';\n\nimport pExec from '../utils/p-exec';\n\nconst moveAction = async (tasks, options) => {\n  const { runTasksInSeries } = options;\n\n  await pExec(runTasksInSeries, tasks, async (task) => {\n    await fsExtra.move(task.absoluteSource, task.absoluteDestination);\n  });\n};\n\nexport default moveAction;\n","import del from 'del';\n\nimport pExec from '../utils/p-exec';\n\nconst deleteAction = async (tasks, options) => {\n  const { runTasksInSeries } = options;\n\n  await pExec(runTasksInSeries, tasks, async (task) => {\n    await del(task.absoluteSource);\n  });\n};\n\nexport default deleteAction;\n","import fs from 'fs';\n\nimport pExec from '../utils/p-exec';\n\nconst mkdirAction = async (tasks, options) => {\n  const { runTasksInSeries } = options;\n\n  await pExec(runTasksInSeries, tasks, async (task) => {\n    await fs.promises.mkdir(task.absoluteSource, { recursive: true });\n  });\n};\n\nexport default mkdirAction;\n","import fs from 'fs';\nimport path from 'path';\n\nimport archiver from 'archiver';\nimport isGlob from 'is-glob';\nimport fsExtra from 'fs-extra';\n\nimport pExec from '../utils/p-exec';\n\nconst archive = async (task) => {\n  const { source, absoluteSource, absoluteDestination, options = {}, context } = task;\n  const format = task.format || path.extname(absoluteDestination).replace('.', '');\n\n  // Exclude destination file from archive\n  const destFile = path.basename(absoluteDestination);\n  const destDir = path.dirname(absoluteDestination);\n\n  const ignore = ((Array.isArray(options.ignore) && options.ignore) || []).concat(destFile);\n  const archiverOptions = { ignore, ...(options.globOptions || {}) };\n\n  await fsExtra.ensureDir(destDir);\n\n  const output = fs.createWriteStream(absoluteDestination);\n  const archive = archiver(format, options);\n  archive.pipe(output);\n\n  if (isGlob(source)) {\n    const opts = {\n      ...archiverOptions,\n      cwd: context,\n    };\n\n    await archive.glob(source, opts).finalize();\n  } else {\n    const sStat = fs.lstatSync(absoluteSource);\n\n    if (sStat.isDirectory()) {\n      const opts = {\n        ...archiverOptions,\n        cwd: absoluteSource,\n      };\n\n      await archive.glob('**/*', opts).finalize();\n    }\n\n    if (sStat.isFile()) {\n      const opts = {\n        name: path.basename(source),\n      };\n\n      await archive.file(absoluteSource, opts).finalize();\n    }\n  }\n};\n\nconst archiveAction = async (tasks, options) => {\n  const { runTasksInSeries } = options;\n  await pExec(runTasksInSeries, tasks, async (task) => await archive(task));\n};\n\nexport default archiveAction;\n","import path from 'path';\n\nimport { validate } from 'schema-utils';\n\nimport optionsSchema from './options-schema';\nimport pExec from './utils/p-exec';\nimport { copyAction, moveAction, mkdirAction, archiveAction, deleteAction } from './actions';\n\nconst PLUGIN_NAME = 'FileManagerPlugin';\n\nconst defaultOptions = {\n  events: {\n    onStart: [],\n    onEnd: [],\n  },\n  runTasksInSeries: false,\n};\n\nconst resolvePaths = (action, context) => {\n  return action.map((task) => {\n    if (typeof task === 'string') {\n      const source = task;\n      return {\n        source,\n        absoluteSource: path.isAbsolute(source) ? source : path.join(context, source),\n      };\n    }\n\n    const { source, destination } = task;\n\n    const toType = /(?:\\\\|\\/)$/.test(destination) ? 'dir' : 'file';\n\n    return {\n      ...task,\n      source,\n      absoluteSource: path.isAbsolute(source) ? source : path.join(context, source),\n      destination,\n      absoluteDestination: path.isAbsolute(destination) ? destination : path.join(context, destination),\n      toType,\n      context,\n    };\n  });\n};\n\nclass FileManagerPlugin {\n  constructor(options) {\n    validate(optionsSchema, options, {\n      name: PLUGIN_NAME,\n      baseDataPath: 'actions',\n    });\n\n    this.options = { ...defaultOptions, ...options };\n  }\n\n  async applyAction(action, actionParams) {\n    const opts = {\n      runTasksInSeries: this.options.runTasksInSeries,\n    };\n\n    await action(resolvePaths(actionParams, this.context), opts);\n  }\n\n  async run(event) {\n    for (const actionType in event) {\n      const action = event[actionType];\n\n      switch (actionType) {\n        case 'delete':\n          await this.applyAction(deleteAction, action);\n          break;\n\n        case 'mkdir':\n          await this.applyAction(mkdirAction, action);\n          break;\n\n        case 'copy':\n          await this.applyAction(copyAction, action);\n          break;\n\n        case 'move':\n          await this.applyAction(moveAction, action);\n          break;\n\n        case 'archive':\n          await this.applyAction(archiveAction, action);\n          break;\n\n        default:\n          throw Error('Unknown action');\n      }\n    }\n  }\n\n  async execute(eventName) {\n    const { events } = this.options;\n\n    if (Array.isArray(events[eventName])) {\n      const eventsArr = events[eventName];\n\n      await pExec(true, eventsArr, async (event) => await this.run(event));\n      return;\n    }\n\n    const event = events[eventName];\n    await this.run(event);\n  }\n\n  apply(compiler) {\n    this.context = compiler.options.context;\n\n    const onStart = async () => {\n      await this.execute('onStart');\n    };\n\n    const onEnd = async () => {\n      await this.execute('onEnd');\n    };\n\n    compiler.hooks.beforeRun.tapPromise(PLUGIN_NAME, onStart);\n    compiler.hooks.watchRun.tapPromise(PLUGIN_NAME, onStart);\n    compiler.hooks.afterEmit.tapPromise(PLUGIN_NAME, onEnd);\n  }\n}\n\nexport default FileManagerPlugin;\n"],"names":["title","type","additionalProperties","definitions","Copy","description","minItems","additionalItems","itmes","properties","source","minLength","destination","Delete","items","Move","Mkdir","Archive","format","enum","options","Actions","copy","$ref","delete","move","mkdir","archive","events","onStart","oneOf","onEnd","runTasksInSeries","default","defaultTask","pExec","series","arr","task","reduce","p","spec","then","Promise","resolve","pMap","map","all","isExtglob","str","match","exec","slice","index","length","chars","strictRegex","relaxedRegex","isGlob","regex","strict","idx","open","close","n","indexOf","absoluteSource","absoluteDestination","context","toType","src","path","posix","join","cpy","isSourceFile","fs","lstatSync","isFile","fsExtra","ensureDir","sourceFileName","basename","filePath","err","copyAction","tasks","moveAction","deleteAction","del","mkdirAction","promises","recursive","extname","replace","destFile","destDir","dirname","ignore","Array","isArray","concat","archiverOptions","globOptions","output","createWriteStream","archiver","pipe","opts","cwd","glob","finalize","sStat","isDirectory","name","file","archiveAction","PLUGIN_NAME","defaultOptions","resolvePaths","action","isAbsolute","test","FileManagerPlugin","constructor","validate","optionsSchema","baseDataPath","applyAction","actionParams","run","event","actionType","Error","execute","eventName","eventsArr","apply","compiler","hooks","beforeRun","tapPromise","watchRun","afterEmit"],"mappings":"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"}